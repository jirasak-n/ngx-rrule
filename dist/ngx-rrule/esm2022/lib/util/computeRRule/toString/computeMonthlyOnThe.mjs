import { Weekday } from 'rrule';
const computeMonthlyOnThe = (onThe) => {
    let repeat = {};
    switch (onThe.which) {
        case 'First':
            repeat.bysetpos = 1;
            break;
        case 'Second':
            repeat.bysetpos = 2;
            break;
        case 'Third':
            repeat.bysetpos = 3;
            break;
        case 'Fourth':
            repeat.bysetpos = 4;
            break;
        case 'Last':
            repeat.bysetpos = -1;
            break;
        default:
            break;
    }
    switch (onThe.day) {
        case 'Monday':
            repeat.byweekday = [0];
            break;
        case 'Tuesday':
            repeat.byweekday = [1];
            break;
        case 'Wednesday':
            repeat.byweekday = [2];
            break;
        case 'Thursday':
            repeat.byweekday = [3];
            break;
        case 'Friday':
            repeat.byweekday = [4];
            break;
        case 'Saturday':
            repeat.byweekday = [5];
            break;
        case 'Sunday':
            repeat.byweekday = [6];
            break;
        case 'Day':
            repeat.byweekday = [0, 1, 2, 3, 4, 5, 6];
            break;
        case 'Weekday':
            repeat.byweekday = [0, 1, 2, 3, 4];
            break;
        case 'Weekend day':
            repeat.byweekday = [5, 6];
            break;
        default:
            break;
    }
    if (repeat.byweekday && repeat.bysetpos) {
        repeat.byweekday = repeat.byweekday.map((r) => new Weekday(r, repeat.bysetpos));
    }
    return repeat;
};
export default computeMonthlyOnThe;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZU1vbnRobHlPblRoZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1ycnVsZS9zcmMvbGliL3V0aWwvY29tcHV0ZVJSdWxlL3RvU3RyaW5nL2NvbXB1dGVNb250aGx5T25UaGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLE9BQU8sQ0FBQztBQUM5QixNQUFNLG1CQUFtQixHQUFHLENBQUMsS0FBVSxFQUFFLEVBQUU7SUFDekMsSUFBSSxNQUFNLEdBQVEsRUFBRSxDQUFDO0lBRXJCLFFBQVEsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3BCLEtBQUssT0FBTztZQUNWLE1BQU0sQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1lBQ3BCLE1BQU07UUFDUixLQUFLLFFBQVE7WUFDWCxNQUFNLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztZQUNwQixNQUFNO1FBQ1IsS0FBSyxPQUFPO1lBQ1YsTUFBTSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7WUFDcEIsTUFBTTtRQUNSLEtBQUssUUFBUTtZQUNYLE1BQU0sQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1lBQ3BCLE1BQU07UUFDUixLQUFLLE1BQU07WUFDVCxNQUFNLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3JCLE1BQU07UUFDUjtZQUNFLE1BQU07SUFDVixDQUFDO0lBRUQsUUFBUSxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDbEIsS0FBSyxRQUFRO1lBQ1gsTUFBTSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLE1BQU07UUFDUixLQUFLLFNBQVM7WUFDWixNQUFNLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsTUFBTTtRQUNSLEtBQUssV0FBVztZQUNkLE1BQU0sQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2QixNQUFNO1FBQ1IsS0FBSyxVQUFVO1lBQ2IsTUFBTSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLE1BQU07UUFDUixLQUFLLFFBQVE7WUFDWCxNQUFNLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsTUFBTTtRQUNSLEtBQUssVUFBVTtZQUNiLE1BQU0sQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2QixNQUFNO1FBQ1IsS0FBSyxRQUFRO1lBQ1gsTUFBTSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLE1BQU07UUFDUixLQUFLLEtBQUs7WUFDUixNQUFNLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDekMsTUFBTTtRQUNSLEtBQUssU0FBUztZQUNaLE1BQU0sQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDbkMsTUFBTTtRQUNSLEtBQUssYUFBYTtZQUNoQixNQUFNLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQzFCLE1BQU07UUFDUjtZQUNFLE1BQU07SUFDVixDQUFDO0lBRUQsSUFBSSxNQUFNLENBQUMsU0FBUyxJQUFJLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUN4QyxNQUFNLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBTSxFQUFFLEVBQUUsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDdkYsQ0FBQztJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQztBQUVGLGVBQWUsbUJBQW1CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1dlZWtkYXl9IGZyb20gJ3JydWxlJztcbmNvbnN0IGNvbXB1dGVNb250aGx5T25UaGUgPSAob25UaGU6IGFueSkgPT4ge1xuICBsZXQgcmVwZWF0OiBhbnkgPSB7fTtcblxuICBzd2l0Y2ggKG9uVGhlLndoaWNoKSB7XG4gICAgY2FzZSAnRmlyc3QnOlxuICAgICAgcmVwZWF0LmJ5c2V0cG9zID0gMTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ1NlY29uZCc6XG4gICAgICByZXBlYXQuYnlzZXRwb3MgPSAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnVGhpcmQnOlxuICAgICAgcmVwZWF0LmJ5c2V0cG9zID0gMztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ0ZvdXJ0aCc6XG4gICAgICByZXBlYXQuYnlzZXRwb3MgPSA0O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnTGFzdCc6XG4gICAgICByZXBlYXQuYnlzZXRwb3MgPSAtMTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuXG4gIHN3aXRjaCAob25UaGUuZGF5KSB7XG4gICAgY2FzZSAnTW9uZGF5JzpcbiAgICAgIHJlcGVhdC5ieXdlZWtkYXkgPSBbMF07XG4gICAgICBicmVhaztcbiAgICBjYXNlICdUdWVzZGF5JzpcbiAgICAgIHJlcGVhdC5ieXdlZWtkYXkgPSBbMV07XG4gICAgICBicmVhaztcbiAgICBjYXNlICdXZWRuZXNkYXknOlxuICAgICAgcmVwZWF0LmJ5d2Vla2RheSA9IFsyXTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ1RodXJzZGF5JzpcbiAgICAgIHJlcGVhdC5ieXdlZWtkYXkgPSBbM107XG4gICAgICBicmVhaztcbiAgICBjYXNlICdGcmlkYXknOlxuICAgICAgcmVwZWF0LmJ5d2Vla2RheSA9IFs0XTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ1NhdHVyZGF5JzpcbiAgICAgIHJlcGVhdC5ieXdlZWtkYXkgPSBbNV07XG4gICAgICBicmVhaztcbiAgICBjYXNlICdTdW5kYXknOlxuICAgICAgcmVwZWF0LmJ5d2Vla2RheSA9IFs2XTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ0RheSc6XG4gICAgICByZXBlYXQuYnl3ZWVrZGF5ID0gWzAsIDEsIDIsIDMsIDQsIDUsIDZdO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnV2Vla2RheSc6XG4gICAgICByZXBlYXQuYnl3ZWVrZGF5ID0gWzAsIDEsIDIsIDMsIDRdO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnV2Vla2VuZCBkYXknOlxuICAgICAgcmVwZWF0LmJ5d2Vla2RheSA9IFs1LCA2XTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuXG4gIGlmIChyZXBlYXQuYnl3ZWVrZGF5ICYmIHJlcGVhdC5ieXNldHBvcykge1xuICAgIHJlcGVhdC5ieXdlZWtkYXkgPSByZXBlYXQuYnl3ZWVrZGF5Lm1hcCgocjogYW55KSA9PiBuZXcgV2Vla2RheShyLCByZXBlYXQuYnlzZXRwb3MpKTtcbiAgfVxuICByZXR1cm4gcmVwZWF0O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29tcHV0ZU1vbnRobHlPblRoZTtcbiJdfQ==