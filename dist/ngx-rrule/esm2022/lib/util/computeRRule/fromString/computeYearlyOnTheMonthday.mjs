const computeYearlyOnTheMonthday = (data, rruleObj) => {
    if (rruleObj.freq !== 0 || !rruleObj.byweekday) {
        return data.repeat.yearly.onThe.day;
    }
    const weekdays = rruleObj.byweekday.map((weekday) => weekday.weekday).join(',');
    switch (weekdays) {
        case '0': {
            return 'Monday';
        }
        case '1': {
            return 'Tuesday';
        }
        case '2': {
            return 'Wednesday';
        }
        case '3': {
            return 'Thursday';
        }
        case '4': {
            return 'Friday';
        }
        case '5': {
            return 'Saturday';
        }
        case '6': {
            return 'Sunday';
        }
        case '0,1,2,3,4,5,6': {
            return 'Day';
        }
        case '0,1,2,3,4': {
            return 'Weekday';
        }
        case '5,6': {
            return 'Weekend day';
        }
        default: {
            return data.repeat.yearly.onThe.day;
        }
    }
};
export default computeYearlyOnTheMonthday;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZVllYXJseU9uVGhlTW9udGhkYXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtcnJ1bGUvc3JjL2xpYi91dGlsL2NvbXB1dGVSUnVsZS9mcm9tU3RyaW5nL2NvbXB1dGVZZWFybHlPblRoZU1vbnRoZGF5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sMEJBQTBCLEdBQUcsQ0FBQyxJQUFTLEVBQUUsUUFBYSxFQUFFLEVBQUU7SUFDOUQsSUFBSSxRQUFRLENBQUMsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUMvQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDdEMsQ0FBQztJQUVELE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBWSxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXJGLFFBQVEsUUFBUSxFQUFFLENBQUM7UUFDakIsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ1QsT0FBTyxRQUFRLENBQUM7UUFDbEIsQ0FBQztRQUNELEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNULE9BQU8sU0FBUyxDQUFDO1FBQ25CLENBQUM7UUFDRCxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDVCxPQUFPLFdBQVcsQ0FBQztRQUNyQixDQUFDO1FBQ0QsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ1QsT0FBTyxVQUFVLENBQUM7UUFDcEIsQ0FBQztRQUNELEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNULE9BQU8sUUFBUSxDQUFDO1FBQ2xCLENBQUM7UUFDRCxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDVCxPQUFPLFVBQVUsQ0FBQztRQUNwQixDQUFDO1FBQ0QsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ1QsT0FBTyxRQUFRLENBQUM7UUFDbEIsQ0FBQztRQUNELEtBQUssZUFBZSxDQUFDLENBQUMsQ0FBQztZQUNyQixPQUFPLEtBQUssQ0FBQztRQUNmLENBQUM7UUFDRCxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDakIsT0FBTyxTQUFTLENBQUM7UUFDbkIsQ0FBQztRQUNELEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQztZQUNYLE9BQU8sYUFBYSxDQUFDO1FBQ3ZCLENBQUM7UUFDRCxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ1IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBQ3RDLENBQUM7SUFDSCxDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsZUFBZSwwQkFBMEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXB1dGVZZWFybHlPblRoZU1vbnRoZGF5ID0gKGRhdGE6IGFueSwgcnJ1bGVPYmo6IGFueSkgPT4ge1xuICBpZiAocnJ1bGVPYmouZnJlcSAhPT0gMCB8fCAhcnJ1bGVPYmouYnl3ZWVrZGF5KSB7XG4gICAgcmV0dXJuIGRhdGEucmVwZWF0LnllYXJseS5vblRoZS5kYXk7XG4gIH1cblxuICBjb25zdCB3ZWVrZGF5cyA9IHJydWxlT2JqLmJ5d2Vla2RheS5tYXAoKHdlZWtkYXk6IGFueSkgPT4gd2Vla2RheS53ZWVrZGF5KS5qb2luKCcsJyk7XG5cbiAgc3dpdGNoICh3ZWVrZGF5cykge1xuICAgIGNhc2UgJzAnOiB7XG4gICAgICByZXR1cm4gJ01vbmRheSc7XG4gICAgfVxuICAgIGNhc2UgJzEnOiB7XG4gICAgICByZXR1cm4gJ1R1ZXNkYXknO1xuICAgIH1cbiAgICBjYXNlICcyJzoge1xuICAgICAgcmV0dXJuICdXZWRuZXNkYXknO1xuICAgIH1cbiAgICBjYXNlICczJzoge1xuICAgICAgcmV0dXJuICdUaHVyc2RheSc7XG4gICAgfVxuICAgIGNhc2UgJzQnOiB7XG4gICAgICByZXR1cm4gJ0ZyaWRheSc7XG4gICAgfVxuICAgIGNhc2UgJzUnOiB7XG4gICAgICByZXR1cm4gJ1NhdHVyZGF5JztcbiAgICB9XG4gICAgY2FzZSAnNic6IHtcbiAgICAgIHJldHVybiAnU3VuZGF5JztcbiAgICB9XG4gICAgY2FzZSAnMCwxLDIsMyw0LDUsNic6IHtcbiAgICAgIHJldHVybiAnRGF5JztcbiAgICB9XG4gICAgY2FzZSAnMCwxLDIsMyw0Jzoge1xuICAgICAgcmV0dXJuICdXZWVrZGF5JztcbiAgICB9XG4gICAgY2FzZSAnNSw2Jzoge1xuICAgICAgcmV0dXJuICdXZWVrZW5kIGRheSc7XG4gICAgfVxuICAgIGRlZmF1bHQ6IHtcbiAgICAgIHJldHVybiBkYXRhLnJlcGVhdC55ZWFybHkub25UaGUuZGF5O1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29tcHV0ZVllYXJseU9uVGhlTW9udGhkYXk7XG4iXX0=